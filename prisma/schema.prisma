datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Job {
  id          Int      @id @default(autoincrement())
  title       String   @db.VarChar(255)
  position    String   @db.VarChar(255)
  description String   @db.Text
  active      Boolean  @default(true)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  candidates Candidate[]

  @@map("jobs")
}

model Process {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  order     Int      @db.Int
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  processOfCandidates ProcessOfCandidate[]

  @@map("processes")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @db.VarChar(50)
  email     String    @db.VarChar(50)
  password  String    @db.VarChar(100)
  phone     String?   @db.VarChar(20)
  role      RoleUser? @default(USER)
  active    Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  processOfCandidates ProcessOfCandidate[]

  @@map("users")
}

model Candidate {
  id               Int      @id @default(autoincrement())
  jobId            Int      @map("job_id")
  fullName         String   @map("full_name") @db.VarChar(255)
  email            String   @db.VarChar(50)
  phone            String   @db.VarChar(20)
  linkCV           String   @map("link_cv") @db.VarChar(255)
  source           Source
  yearOfExperience Float?   @map("year_of_experience") @db.Float
  address          String?  @db.VarChar(255)
  preferredOffer   Float?   @map("preferred_offer") @db.Float
  referrer         String?  @db.VarChar(255)
  active           Boolean  @default(true)
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  job                 Job                  @relation(fields: [jobId], references: [id])
  processOfCandidates ProcessOfCandidate[]

  @@map("candidates")
}

model ProcessOfCandidate {
  processId   Int     @map("process_id")
  candidateId Int     @map("candidate_id")
  userId      Int?    @map("user_id")
  note        String? @db.Text
  exam        String? @db.VarChar(255)
  score       Float?  @db.Float

  process   Process   @relation(fields: [processId], references: [id])
  candidate Candidate @relation(fields: [candidateId], references: [id])
  user      User?     @relation(fields: [userId], references: [id])

  @@id([processId, candidateId])
  @@map("process_of_candidates")
}

enum RoleUser {
  ADMIN
  USER
  LEADER
}

enum Source {
  WEB_FORM
  TOP_CV
  IT_VIEC
  FACEBOOK
  LINKEDIN
  OTHER
}
